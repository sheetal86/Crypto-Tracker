{"ast":null,"code":"var _jsxFileName = \"D:\\\\SHEETAL\\\\crypto-tracker-github\\\\Crypto-Tracker\\\\src\\\\components\\\\InfoCoin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { CryptoState } from '../CryptoContext';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { Day } from '../config/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoCoin = ({\n  coin\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = CryptoState();\n  const chartRef = useRef(null);\n  const fetchData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`);\n      setData(data.prices);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [days, currency, coin.id]);\n  useEffect(() => {\n    const renderChart = () => {\n      if (chartRef.current) {\n        const ctx = chartRef.current.getContext('2d');\n        if (ctx) {\n          // Destroy the existing chart instance if it exists\n          if (chartRef.current.chart) {\n            chartRef.current.chart.destroy();\n          }\n\n          // Create a new chart instance\n          chartRef.current.chart = new Chart(ctx, {\n            type: 'line',\n            data: {\n              labels: data.map(res => {\n                let date = new Date(res[0]);\n                let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n                return days === 1 ? time : date.toLocaleDateString();\n              }),\n              datasets: [{\n                // idhr hme red or green me line chahiye\n                data: data.map(res => res[1]),\n                label: `Price (Past ${days} Days) in ${currency}`,\n                borderColor: data.map((res, index) => index > 0 && res[1] > data[index - 1][1] ? 'green' : 'red'),\n                borderWidth: 1\n              }]\n            },\n            options: {\n              elements: {\n                point: {\n                  radius: 3\n                }\n              }\n            }\n          });\n        }\n      }\n    };\n\n    // Delay rendering the chart until the data is available\n    renderChart();\n  }, [data, days, currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-danger\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      id: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-evenly align-items-center mt-3\",\n      children: Day.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" btn btn-outline-danger\",\n        onClick: () => setDays(day.value),\n        children: day.label\n      }, day.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoCoin, \"Rlb432E12Qz9kBzAgKoMXI/fsG0=\");\n_c = InfoCoin;\nexport default InfoCoin;\nvar _c;\n$RefreshReg$(_c, \"InfoCoin\");","map":{"version":3,"names":["React","useEffect","useState","useRef","CryptoState","axios","Line","Chart","Day","jsxDEV","_jsxDEV","InfoCoin","coin","_s","data","setData","days","setDays","currency","chartRef","fetchData","get","id","prices","error","console","renderChart","current","ctx","getContext","chart","destroy","type","labels","map","res","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","index","borderWidth","options","elements","point","radius","children","length","className","role","fileName","_jsxFileName","lineNumber","columnNumber","ref","day","onClick","value","_c","$RefreshReg$"],"sources":["D:/SHEETAL/crypto-tracker-github/Crypto-Tracker/src/components/InfoCoin.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { CryptoState } from '../CryptoContext';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport {Day} from '../config/data'\n\nconst InfoCoin = ({ coin }) => {\n  const [data, setData] = useState([]);\n  const [days, setDays] = useState(1);\n  const { currency } = CryptoState();\n  const chartRef = useRef(null);\n\n  const fetchData = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart?vs_currency=${currency}&days=${days}`\n      );\n      setData(data.prices);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [days, currency, coin.id]);\n\n  useEffect(() => {\n    const renderChart = () => {\n      if (chartRef.current) {\n        const ctx = chartRef.current.getContext('2d');\n        if (ctx) {\n          // Destroy the existing chart instance if it exists\n          if (chartRef.current.chart) {\n            chartRef.current.chart.destroy();\n          }\n\n          // Create a new chart instance\n          chartRef.current.chart = new Chart(ctx, {\n            type: 'line',\n            data: {\n              labels: data.map((res) => {\n                let date = new Date(res[0]);\n                let time =\n                  date.getHours() > 12\n                    ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                    : `${date.getHours()}:${date.getMinutes()} AM`;\n                return days === 1 ? time : date.toLocaleDateString();\n              }),\n              datasets: [\n                {  // idhr hme red or green me line chahiye\n                  data: data.map((res) => res[1]),\n                  label: `Price (Past ${days} Days) in ${currency}`,\n                  borderColor: data.map((res, index) =>\n                    index > 0 && res[1] > data[index - 1][1] ? 'green' : 'red'\n                  ),\n                 borderWidth:1,\n                },\n              ],\n            },\n            options: {\n              elements: {\n                point: {\n                  radius: 3,\n                },\n              },\n            },\n          });\n        }\n      }\n    };\n\n    // Delay rendering the chart until the data is available\n    renderChart();\n  }, [data, days, currency]);\n\n  return (\n    <div>\n      {data.length === 0 ? (\n        <div className='d-flex justify-content-center align-items-center'>\n          <div className=\"spinner-border text-danger\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      ) : (\n        <canvas ref={chartRef} id=\"chart\" />\n      )}\n      <div className='d-flex flex-row justify-content-evenly align-items-center mt-3'>{Day.map((day)=>(\n        \n        <button className=' btn btn-outline-danger' onClick={()=>setDays(day.value)} key={day.value}>\n       {day.label}    \n    </button>\n      ))}</div>\n    </div>\n  );\n};\n\nexport default InfoCoin;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}